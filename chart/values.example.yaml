serviceTree:
  landscape: &landscape entei
  cluster: &cluster onyx

tags: &tags
  atomi.cloud/landscape: *landscape
  atomi.cloud/cluster: *cluster

clusterName: &clusterName "entei-onyx"
nodeRole: some-arn

karpenter:
  settings:
    clusterName: *clusterName
    interruptionQueueName: *clusterName
  additionalAnnotations:
    <<: *tags
  podLabels:
    <<: *tags
  additionalLabels:
    <<: *tags
  podAnnotations:
    <<: *tags
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: some-arn
      <<: *tags
    labels:
      <<: *tags

al2:
  enable: tru
  requirements:
  - key: "karpenter.k8s.aws/instance-category"
    operator: In
    values: ["c", "m", "r"]
  - key: "karpenter.k8s.aws/instance-cpu"
    operator: In
    values: ["4", "8", "16", "32"]
  - key: "karpenter.k8s.aws/instance-hypervisor"
    operator: In
    values: ["nitro"]
  - key: "karpenter.k8s.aws/instance-generation"
    operator: Gt
    values: ["2"]
  - key: "topology.kubernetes.io/zone"
    operator: In
    values: ["us-west-2a", "us-west-2b"]
  - key: "kubernetes.io/arch"
    operator: In
    values: ["arm64", "amd64"]
  - key: "karpenter.sh/capacity-type"
    operator: In
    values: ["spot", "on-demand"]
  limits:
    cpu: 1000
    memory: 1000Gi
  disruption:
    consolidationPolicy: "WhenUnderutilized" # or WhenEmpty
    consolidateAfter: 30s
    expireAfter: 720h
    budgets:
      - 20%

bottlerocket:
  enable: true
  requirements:
    - key: "karpenter.k8s.aws/instance-category"
      operator: In
      values: [ "c", "m", "r" ]
    - key: "karpenter.k8s.aws/instance-cpu"
      operator: In
      values: [ "4", "8", "16", "32" ]
    - key: "karpenter.k8s.aws/instance-hypervisor"
      operator: In
      values: [ "nitro" ]
    - key: "karpenter.k8s.aws/instance-generation"
      operator: Gt
      values: [ "2" ]
    - key: "topology.kubernetes.io/zone"
      operator: In
      values: [ "us-west-2a", "us-west-2b" ]
    - key: "kubernetes.io/arch"
      operator: In
      values: [ "arm64", "amd64" ]
    - key: "karpenter.sh/capacity-type"
      operator: In
      values: [ "spot", "on-demand" ]
  limits:
    cpu: 1000
    memory: 1000Gi
  disruption:
    consolidationPolicy: "WhenUnderutilized" # or WhenEmpty
    consolidateAfter: 30s
    expireAfter: 720h
    budgets:
      - 20%
